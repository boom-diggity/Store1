
void merge(int arr[], int sorted[], int left, int right)
{
	int mid = (left + right) / 2;

	int i = left;
	int j = mid + 1;
	int k = left;
	
	while (i <= mid && j <= right)
	{
		if (arr[i] < arr[j])
		{
			sorted[k++] = arr[i++];
		}
		else
		{
			sorted[k++] = arr[j++];
		}
	}
	int st = (i>mid) ? j:i;
	while (k <= right) sorted[k++] = arr[st++]; // 남은 숫자 넣기

	for (int i = left; i <= right; ++i) arr[i] = sorted[i]; // 다시 업데이트
}
void partition(int arr[],int sorted[],int left, int right)
{
	int mid;
	if (left < right)
	{
		mid = (left + right) / 2;
		partition(arr,sorted, left, mid);
		partition(arr,sorted, mid + 1, right);
		merge(arr, sorted,left, right);
	}
}

int main()
{

	int arr[7] = { 1,4,2,5,3,2,7 };
	int sorted[7];
	printArray(arr, 7);
	partition(arr, sorted, 0, 6);
	printArray(arr, 7);
	
	return 0;



}
